//
//  TestUserDefaultsManager.swift
//  gdm
//
//  Created by Anatoliy Podkladov on 2025-07-13.
//

import Foundation

final class TestUserDefaultsManager {
    
    private static var activeSuites: Set<String> = []
    
    /// –°–æ–∑–¥–∞–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π suite name –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –µ–≥–æ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏
    static func createTestSuite(for testName: String) -> String {
        let cleanTestName = testName.replacingOccurrences(of: "[", with: "")
                                   .replacingOccurrences(of: "]", with: "")
                                   .replacingOccurrences(of: " ", with: "_")
        let timestamp = Int(Date().timeIntervalSince1970)
        let random = Int.random(in: 1000...9999)
        let suiteName = "test.gdm.\(cleanTestName).\(timestamp).\(random)"
        
        activeSuites.insert(suiteName)
        
        print("üìù –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π UserDefaults: \(suiteName)")
        return suiteName
    }
    
    /// –û—á–∏—â–∞–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π test suite
    static func cleanupTestSuite(_ suiteName: String) {
        if let testDefaults = UserDefaults(suiteName: suiteName) {
            // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–ª—é—á–∏ –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
            let keys = testDefaults.dictionaryRepresentation().keys
            
            // –£–¥–∞–ª—è–µ–º –¥–æ–º–µ–Ω
            testDefaults.removePersistentDomain(forName: suiteName)
            
            activeSuites.remove(suiteName)
            
            print("üßΩ –û—á–∏—â–µ–Ω UserDefaults: \(suiteName) (\(keys.count) –∫–ª—é—á–µ–π)")
        }
    }
    
    /// –û—á–∏—â–∞–µ—Ç –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ test suites
    static func cleanupAllTestSuites() {
        let suitesToCleanup = Array(activeSuites)
        
        for suiteName in suitesToCleanup {
            cleanupTestSuite(suiteName)
        }
        
        print("üßΩ –û—á–∏—â–µ–Ω–æ \(suitesToCleanup.count) —Ç–µ—Å—Ç–æ–≤—ã—Ö UserDefaults")
    }
    
    /// –í—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö test suites
    static func debugActiveSuites() {
        print("\n=== –ê–ö–¢–ò–í–ù–´–ï –¢–ï–°–¢–û–í–´–ï USERDEFAULTS ===")
        
        if activeSuites.isEmpty {
            print("–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤—ã—Ö UserDefaults")
            return
        }
        
        for suiteName in activeSuites {
            if let testDefaults = UserDefaults(suiteName: suiteName) {
                let keys = testDefaults.dictionaryRepresentation().keys
                print("üì¶ \(suiteName): \(keys.count) –∫–ª—é—á–µ–π")
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –µ—Å–ª–∏ –∫–ª—é—á–µ–π –Ω–µ–º–Ω–æ–≥–æ
                if keys.count <= 5 {
                    for key in keys.sorted() {
                        let value = testDefaults.object(forKey: key)
                        print("   \(key): \(type(of: value))")
                    }
                }
            }
        }
    }
}
